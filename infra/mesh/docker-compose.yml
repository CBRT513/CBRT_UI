version: '3.8'

services:
  # Envoy Proxy (Istio Sidecar simulation)
  envoy-frontend:
    image: envoyproxy/envoy:v1.28-latest
    container_name: cbrt-envoy-frontend
    ports:
      - "3000:3000"
      - "15000:15000"  # Admin interface
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
      - ./certs:/etc/certs:ro
    command: ["/usr/local/bin/envoy", "-c", "/etc/envoy/envoy.yaml", "--service-cluster", "cbrt-frontend"]
    networks:
      - cbrt-mesh
    environment:
      - SERVICE_NAME=cbrt-frontend
      - SPIFFE_ID=spiffe://cbrt.company.com/frontend/cbrt-ui
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15000/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  envoy-api:
    image: envoyproxy/envoy:v1.28-latest
    container_name: cbrt-envoy-api
    ports:
      - "8080:8080"
      - "15001:15000"  # Admin interface
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml:ro
      - ./certs:/etc/certs:ro
    command: ["/usr/local/bin/envoy", "-c", "/etc/envoy/envoy.yaml", "--service-cluster", "cbrt-api"]
    networks:
      - cbrt-mesh
    environment:
      - SERVICE_NAME=cbrt-api
      - SPIFFE_ID=spiffe://cbrt.company.com/api/cbrt-backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15000/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  # CBRT Application Services (Mock)
  cbrt-frontend-mock:
    image: nginx:alpine
    container_name: cbrt-frontend-service
    volumes:
      - ./mock-services/frontend:/usr/share/nginx/html:ro
      - ./mock-services/nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - cbrt-mesh
    environment:
      - SERVICE_NAME=cbrt-frontend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  cbrt-api-mock:
    image: node:18-alpine
    container_name: cbrt-api-service
    working_dir: /app
    volumes:
      - ./mock-services/api:/app:ro
    command: ["node", "server.js"]
    networks:
      - cbrt-mesh
    environment:
      - NODE_ENV=production
      - SERVICE_NAME=cbrt-api
      - PORT=8080
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Observability Stack
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: cbrt-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus/rules:/etc/prometheus/rules:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    networks:
      - cbrt-mesh
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:10.0.0
    container_name: cbrt-grafana
    ports:
      - "3001:3000"
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - grafana-data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    networks:
      - cbrt-mesh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  jaeger:
    image: jaegertracing/all-in-one:1.48
    container_name: cbrt-jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # gRPC
      - "14268:14268"  # HTTP
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=badger
      - BADGER_EPHEMERAL=false
      - BADGER_DIRECTORY_VALUE=/badger/data
      - BADGER_DIRECTORY_KEY=/badger/key
    volumes:
      - jaeger-data:/badger
    networks:
      - cbrt-mesh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:14269/"]
      interval: 30s
      timeout: 10s
      retries: 3

  loki:
    image: grafana/loki:2.8.0
    container_name: cbrt-loki
    ports:
      - "3100:3100"
    volumes:
      - ./loki/loki.yaml:/etc/loki/local-config.yaml:ro
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - cbrt-mesh
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3100/ready"]
      interval: 30s
      timeout: 10s
      retries: 3

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.88.0
    container_name: cbrt-otel-collector
    ports:
      - "4317:4317"   # OTLP gRPC
      - "4318:4318"   # OTLP HTTP
      - "8889:8889"   # Prometheus metrics
      - "13133:13133" # Health check
    volumes:
      - ./otel/collector.yaml:/etc/otel/config.yaml:ro
    command: ["--config=/etc/otel/config.yaml"]
    networks:
      - cbrt-mesh
    depends_on:
      - prometheus
      - jaeger
      - loki
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:13133/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Rate Limiting Service
  redis:
    image: redis:7-alpine
    container_name: cbrt-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - cbrt-mesh
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Test Client for validation
  test-client:
    image: curlimages/curl:8.0.0
    container_name: cbrt-test-client
    networks:
      - cbrt-mesh
    command: ["tail", "-f", "/dev/null"]
    profiles:
      - test

volumes:
  prometheus-data:
  grafana-data:
  jaeger-data:
  loki-data:
  redis-data:

networks:
  cbrt-mesh:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16