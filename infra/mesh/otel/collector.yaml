apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: observability
  labels:
    app: cbrt
    component: otel-collector
data:
  config.yaml: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      jaeger:
        protocols:
          grpc:
            endpoint: 0.0.0.0:14250
          thrift_http:
            endpoint: 0.0.0.0:14268
      zipkin:
        endpoint: 0.0.0.0:9411
      prometheus:
        config:
          scrape_configs:
          - job_name: 'cbrt-services'
            kubernetes_sd_configs:
            - role: pod
            relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: kubernetes_pod_name
      
    processors:
      batch:
        timeout: 5s
        send_batch_size: 1024
      memory_limiter:
        limit_mib: 512
      resource:
        attributes:
        - key: service.name
          from_attribute: service_name
          action: insert
        - key: service.version
          from_attribute: service_version
          action: insert
        - key: deployment.environment
          value: "production"
          action: insert
        - key: cluster.name
          value: "cbrt-cluster"
          action: insert
      probabilistic_sampler:
        sampling_percentage: 10
      span:
        include:
          match_type: regexp
          services: ["cbrt-.*"]
        exclude:
          match_type: strict
          span_names: ["health-check", "readiness-probe"]
      
    exporters:
      prometheus:
        endpoint: "0.0.0.0:8889"
        const_labels:
          cluster: "cbrt-cluster"
          environment: "production"
        metric_relabeling:
        - source_labels: [__name__]
          regex: 'cbrt_.*'
          target_label: component
          replacement: 'cbrt'
      jaeger:
        endpoint: jaeger:14250
        tls:
          insecure: true
      logging:
        loglevel: info
        sampling_initial: 5
        sampling_thereafter: 200
      otlp/loki:
        endpoint: http://loki:3100/otlp
        tls:
          insecure: true
        headers:
          "X-Scope-OrgID": "cbrt"
      
    extensions:
      health_check:
        endpoint: 0.0.0.0:13133
      pprof:
        endpoint: 0.0.0.0:1777
      zpages:
        endpoint: 0.0.0.0:55679
      memory_ballast:
        size_mib: 64
        
    service:
      extensions: [health_check, pprof, zpages, memory_ballast]
      pipelines:
        traces:
          receivers: [otlp, jaeger, zipkin]
          processors: [memory_limiter, resource, probabilistic_sampler, span, batch]
          exporters: [jaeger, logging]
        metrics:
          receivers: [otlp, prometheus]
          processors: [memory_limiter, resource, batch]
          exporters: [prometheus, logging]
        logs:
          receivers: [otlp]
          processors: [memory_limiter, resource, batch]
          exporters: [otlp/loki, logging]
      telemetry:
        logs:
          level: "info"
        metrics:
          address: 0.0.0.0:8888
          level: detailed
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: observability
  labels:
    app: cbrt
    component: otel-collector
spec:
  replicas: 2
  selector:
    matchLabels:
      app: otel-collector
  template:
    metadata:
      labels:
        app: otel-collector
        component: observability
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8888"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: otel-collector-sa
      containers:
      - name: otel-collector
        image: otel/opentelemetry-collector-contrib:0.88.0
        args:
          - --config=/conf/config.yaml
        volumeMounts:
        - name: config
          mountPath: /conf
          readOnly: true
        ports:
        - containerPort: 4317
          name: otlp-grpc
          protocol: TCP
        - containerPort: 4318
          name: otlp-http
          protocol: TCP
        - containerPort: 14250
          name: jaeger-grpc
          protocol: TCP
        - containerPort: 14268
          name: jaeger-http
          protocol: TCP
        - containerPort: 9411
          name: zipkin
          protocol: TCP
        - containerPort: 8889
          name: prometheus
          protocol: TCP
        - containerPort: 8888
          name: metrics
          protocol: TCP
        - containerPort: 13133
          name: health
          protocol: TCP
        env:
        - name: GOGC
          value: "80"
        - name: GOMEMLIMIT
          value: "512MiB"
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /
            port: health
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
      volumes:
      - name: config
        configMap:
          name: otel-collector-config
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: observability
  labels:
    app: cbrt
    component: otel-collector
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8888"
spec:
  type: ClusterIP
  ports:
  - name: otlp-grpc
    port: 4317
    targetPort: otlp-grpc
    protocol: TCP
  - name: otlp-http
    port: 4318
    targetPort: otlp-http
    protocol: TCP
  - name: jaeger-grpc
    port: 14250
    targetPort: jaeger-grpc
    protocol: TCP
  - name: jaeger-http
    port: 14268
    targetPort: jaeger-http
    protocol: TCP
  - name: zipkin
    port: 9411
    targetPort: zipkin
    protocol: TCP
  - name: prometheus
    port: 8889
    targetPort: prometheus
    protocol: TCP
  - name: metrics
    port: 8888
    targetPort: metrics
    protocol: TCP
  selector:
    app: otel-collector
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: otel-collector-sa
  namespace: observability
  labels:
    app: cbrt
    component: otel-collector
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: otel-collector
  labels:
    app: cbrt
    component: otel-collector
rules:
- apiGroups: [""]
  resources: ["pods", "nodes", "services", "endpoints", "namespaces"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["replicasets", "deployments"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions"]
  resources: ["replicasets"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: otel-collector
  labels:
    app: cbrt
    component: otel-collector
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: otel-collector
subjects:
- kind: ServiceAccount
  name: otel-collector-sa
  namespace: observability